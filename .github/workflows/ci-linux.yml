name: Test-Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-linux:
    permissions:
      checks: write
      pull-requests: write
      contents: read
      packages: read
    
    name: Test
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
#          - os: ubuntu-24.04
#            arch: amd64
          - os: ubuntu-24.04
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      # Combined step to run all test operations in Docker
      - name: Run tests in Docker
        run: |
          docker run --rm \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e MIX_ENV=test \
            -e GITHUB_EVENT_PATH=/github/event.json \
            -v ${{ github.workspace }}:/app \
            -v ${{ github.event_path }}:/github/event.json \
            ghcr.io/${{ github.repository }}/p11ex-test:latest \
            sh -c "cd /app && \
              sh test/softhsm-reset.sh && \
              cd c_src && \
              curl -z pkcs11.h -O https://raw.githubusercontent.com/oasis-tcs/pkcs11/master/published/3-01/pkcs11.h && \
              curl -z pkcs11t.h -O https://raw.githubusercontent.com/oasis-tcs/pkcs11/master/published/3-01/pkcs11t.h && \
              curl -z pkcs11f.h -O https://raw.githubusercontent.com/oasis-tcs/pkcs11/master/published/3-01/pkcs11f.h && \
              cd .. && \
              # Install hex and get dependencies
              mix local.hex --force && \
              mix deps.get && \
              mix compile --warnings-as-errors && \
              mix test --cover || true"

      - name: Upload test results and coverage
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.arch }}.zip
          path: |
            _build/test/lib/*/test-*.xml
            cover/
            cover/excoveralls.json
            doc/

      - name: Publish Test Results
        if: ${{ !env.ACT }} && always() && matrix.os == 'ubuntu-24.04'
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "_build/test/lib/*/test-*.xml"
