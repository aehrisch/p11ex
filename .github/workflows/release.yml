name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest test image
        run: |
          docker pull ghcr.io/${{ github.repository }}/p11ex-test:latest-linux-amd64

      - name: Run release process in Docker
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --rm \
            -e HEX_API_KEY \
            -e GITHUB_TOKEN \
            -e MIX_ENV=prod \
            -v ${{ github.workspace }}:/app \
            ghcr.io/${{ github.repository }}/p11ex-test:latest-linux-amd64 \
            sh -c "cd /app && \
              export SOFTHSM2_CONF=$(mktemp) && \
              export MAKE_TOKEN_DIR=yes && \
              sh test/softhsm-reset.sh && \
              # Download PKCS#11 headers && \
              cd c_src && \
              curl -z pkcs11.h -O https://raw.githubusercontent.com/oasis-tcs/pkcs11/master/published/3-01/pkcs11.h && \
              curl -z pkcs11t.h -O https://raw.githubusercontent.com/oasis-tcs/pkcs11/master/published/3-01/pkcs11t.h && \
              curl -z pkcs11f.h -O https://raw.githubusercontent.com/oasis-tcs/pkcs11/master/published/3-01/pkcs11f.h && \
              cd .. && \
              # Install hex and get dependencies
              mix local.hex --force && \
              mix deps.get && \
              mix deps.compile && \
              # Build NIF
              make clean && \
              make && \
              # Run tests
              mix test && \
              # Run credo
              mix credo && \
              # Setup git_ops and generate changelog
              mix git_ops.release && \
              mix git_ops.changelog && \
              # Build and publish
              mix hex.build && \
              mix hex.publish"

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
